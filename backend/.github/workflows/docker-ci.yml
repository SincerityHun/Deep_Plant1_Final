name: Docker CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build the Docker images
        run: docker-compose build

      - name: Push the Docker images
        run: docker-compose push

  deploy:
    needs: build-and-push # This ensures deployment starts after the build-and-push job is completed
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Deploy to EC2
        env:
          HOST: ${{ secrets.EC2_HOST }}
          USERNAME: ${{ secrets.EC2_USERNAME }}
          KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          # Install SSH client
          sudo apt-get update
          sudo apt-get install -y openssh-client
          # Start SSH agent
          eval $(ssh-agent -s)
          # Add SSH key stored in GitHub secrets to the agent store
          ssh-add <(echo "$KEY")
          # Disable SSH host key checking
          echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
          # SSH to the EC2 instance and pull the latest images and redeploy using docker-compose
          ssh -o 'StrictHostKeyChecking=no' $USERNAME@$HOST << 'ENDSSH'
          cd path/to/your/docker-compose/folder
          docker-compose pull
          docker-compose up -d
          ENDSSH


          